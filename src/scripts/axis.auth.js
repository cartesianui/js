// Implements Authorization API that simplifies usage of authorization scripts generated by Axis.
var axis = axis || {};
(function () {
  axis.auth = axis.auth || {};

  axis.auth.allPermissions = axis.auth.allPermissions || {};

  axis.auth.grantedPermissions = axis.auth.grantedPermissions || {};

  //Deprecated. Use axis.auth.isGranted instead.
  axis.auth.hasPermission = function (permissionName) {
    return axis.auth.isGranted.apply(this, arguments);
  };

  //Deprecated. Use axis.auth.isAnyGranted instead.
  axis.auth.hasAnyOfPermissions = function () {
    return axis.auth.isAnyGranted.apply(this, arguments);
  };

  //Deprecated. Use axis.auth.areAllGranted instead.
  axis.auth.hasAllOfPermissions = function () {
    return axis.auth.areAllGranted.apply(this, arguments);
  };

  axis.auth.isGranted = function (permissionName) {
    return (
      axis.auth.allPermissions[permissionName] != undefined &&
      axis.auth.grantedPermissions[permissionName] != undefined
    );
  };

  axis.auth.isAnyGranted = function () {
    if (!arguments || arguments.length <= 0) {
      return true;
    }

    for (var i = 0; i < arguments.length; i++) {
      if (axis.auth.isGranted(arguments[i])) {
        return true;
      }
    }

    return false;
  };

  axis.auth.areAllGranted = function () {
    if (!arguments || arguments.length <= 0) {
      return true;
    }

    for (var i = 0; i < arguments.length; i++) {
      if (!axis.auth.isGranted(arguments[i])) {
        return false;
      }
    }

    return true;
  };

  axis.auth.tokenCookieName = "Axis.AuthToken";

  axis.auth.setToken = function (authToken, expireDate) {
    axis.utils.setCookieValue(
      axis.auth.tokenCookieName,
      authToken,
      expireDate,
      axis.appPath,
      axis.domain
    );
  };

  axis.auth.getToken = function () {
    return axis.utils.getCookieValue(axis.auth.tokenCookieName);
  };

  axis.auth.clearToken = function () {
    axis.auth.setToken();
  };

  axis.auth.refreshTokenCookieName = "Axis.AuthRefreshToken";

  axis.auth.setRefreshToken = function (refreshToken, expireDate) {
    axis.utils.setCookieValue(
      axis.auth.refreshTokenCookieName,
      refreshToken,
      expireDate,
      axis.appPath,
      axis.domain
    );
  };

  axis.auth.getRefreshToken = function () {
    return axis.utils.getCookieValue(axis.auth.refreshTokenCookieName);
  };

  axis.auth.clearRefreshToken = function () {
    axis.auth.setRefreshToken();
  };
})();
